{"version":3,"sources":["components/Home.jsx","components/GifCard.jsx","components/SearchField.jsx","components/SearchBar.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleTrending","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","rating","_ref2","data","wrap","_context","prev","next","axios","get","sent","setState","gifs","stop","_x","apply","arguments","handleRandom","_callee2","_ref4","_context2","handleTranslate","_ref5","_callee3","phrase","currRating","toTranslate","_ref6","_context3","s","post","_x2","_x3","handleSearch","_ref7","_callee4","searchParams","searchQuery","_ref8","_context4","q","_x4","_x5","state","react_default","createElement","SearchBar","length","id","map","gif","components_GifCard","key","url","className","Component","GifCard","_props$props","images","src","fixed_height_downsampled","gif_url","alt","title","href","concat","SearchField","handleChange","evt","_evt$target","name","value","preventDefault","target","defineProperty","handleSubmit","_this$state","endpoint","input","_this2","onSubmit","onChange","type","placeholder","aria-label","handleHomeChange","SearchField_SearchField","onClick","App","components_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d8c97de1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { SearchBar, GifCard } from './index';\nimport axios from 'axios';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gifs: [],\n      rating: '',\n    };\n  }\n\n  handleTrending = async rating => {\n    const { data } = await axios.get('/api/trending');\n    this.setState({ gifs: data });\n  };\n  handleRandom = async () => {\n    const { data } = await axios.get('/api/random');\n    this.setState({ gifs: [data] });\n  };\n\n  handleTranslate = async (phrase, currRating) => {\n    const toTranslate = { s: phrase, rating: currRating };\n    const { data } = await axios.post('/api/translate', toTranslate);\n    this.setState({ gifs: [data] });\n  };\n\n  handleSearch = async (searchParams, currRating) => {\n    const searchQuery = { q: searchParams, rating: currRating };\n    const { data } = await axios.post('/api/search', searchQuery);\n    this.setState({ gifs: data });\n  };\n\n  render() {\n    const { gifs } = this.state;\n    return (\n      <div>\n        <h1>Welcome to the Gif Factory</h1>\n        <SearchBar\n          handleRandom={this.handleRandom}\n          handleSearch={this.handleSearch}\n          handleTranslate={this.handleTranslate}\n          handleTrending={this.handleTrending}\n        />\n        {!gifs.length ? (\n          <div className='landing-page-ui-description'>\n            <h2>Let's find some gifs!</h2>\n            <p>\n              Use the search field above to find gifs or translate a phrase.\n            </p>\n            <p>You can filter search/translate results based on a rating scale</p>\n            <p>\n              See what's trending by clicking 'What's hot!' or get a random gif\n              by clicking 'I'm feeling Giphy'\n            </p>\n          </div>\n        ) : (\n          <div id=\"all-gifs-container\">\n            {gifs.map(gif => (\n              <GifCard key={gif.url} props={gif} />\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\n\nconst GifCard = props => {\n  const { images, url } = props.props;\n  return (\n    <div className=\"single-gif-container\">\n      <img\n        src={\n          images.fixed_height_downsampled.url ||\n          images.fixed_height_downsampled.gif_url\n        }\n        alt={props.props.title}\n      />\n      <p className=\"gif-copy-url\">Copy URL:</p>{' '}\n      <a href={`${url}`} className=\"gif-url\">\n        {url}\n      </a>\n    </div>\n  );\n};\n\nexport default GifCard;\n","import React, { Component } from 'react';\n// import axios from 'axios';\n\nexport default class SearchField extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      endpoint: '',\n      input: '',\n      rating: '',\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.endpoint) this.setState({ endpoint: 'search' });\n  }\n\n  handleChange = async evt => {\n    evt.preventDefault();\n    const { name, value } = evt.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n    const { endpoint, input, rating } = this.state;\n    endpoint === 'search'\n      ? this.props.handleSearch(input, rating)\n      : this.props.handleTranslate(input, rating);\n    this.setState({\n      input: '',\n      rating: ''\n    });\n  };\n\n  render() {\n    return (\n      <form className=\"\" id=\"form-container\" onSubmit={this.handleSubmit}>\n      <label>Rating Filter</label>\n      <select className='search-field-dropdown'\n      onChange={evt => {\n        evt.target.name = 'rating';\n        this.handleChange(evt);\n      }}\n    >\n      <option value=\"''\">All</option>\n      <option value=\"y\">Y</option>\n      <option value=\"g\">G</option>\n      <option value=\"pg\">PG</option>\n      <option value=\"pg-13\">PG-13</option>\n      <option value=\"r\">R</option>\n    </select>\n        <select className='search-field-dropdown'\n          onChange={evt => {\n            evt.target.name = 'endpoint';\n            this.handleChange(evt);\n          }}\n        >\n          <option value=\"search\">Search</option>\n          <option value=\"translate\">Translate</option>\n        </select>\n        <input\n          value={this.state.input}\n          name=\"input\"\n          onChange={this.handleChange}\n          className=\"\"\n          type=\"search\"\n          placeholder={`${this.state.endpoint}`}\n          aria-label=\"Search\"\n        />\n        <button className='search-bar-button' type=\"submit\">\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport { SearchField } from './index';\n\nexport default function SearchBar(props) {\n  const {\n    handleHomeChange,\n    handleSearch,\n    handleTranslate,\n    handleTrending,\n    handleRandom,\n  } = props;\n  return (\n    <nav className=\"search-bar-container\">\n      <SearchField\n        handleHomeChange={handleHomeChange}\n        handleSearch={handleSearch}\n        handleTranslate={handleTranslate}\n      />\n      <div className=\"search-bar-button-container\">\n        <button\n          className=\"search-bar-button\"\n          type=\"button\"\n          onClick={handleTrending}\n        >\n          What's hot!\n        </button>\n        <button\n          className=\"search-bar-button\"\n          type=\"button\"\n          onClick={handleRandom}\n        >\n          I'm feelin' Giphy\n        </button>\n      </div>\n    </nav>\n  );\n}\n","import React, { Component } from 'react';\nimport { Home } from './components';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app-container\">\n        <Home />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}