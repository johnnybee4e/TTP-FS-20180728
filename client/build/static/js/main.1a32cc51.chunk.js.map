{"version":3,"sources":["components/Home.jsx","components/GifCard.jsx","components/SearchField.jsx","components/SearchBar.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleTrending","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","rating","_ref2","data","wrap","_context","prev","next","axios","get","sent","setState","gifs","stop","_x","apply","arguments","handleRandom","_callee2","_ref4","_context2","console","log","handleTranslate","_ref5","_callee3","phrase","toTranslate","_ref6","_context3","s","post","_x2","handleSearch","_ref7","_callee4","searchParams","searchQuery","_ref8","_context4","q","_x3","handleHomeChange","_ref9","_callee5","evt","_context5","preventDefault","_x4","state","react_default","createElement","className","SearchBar","map","gif","components_GifCard","key","url","Component","GifCard","_props$props","images","src","fixed_height_downsampled","gif_url","alt","title","SearchField","handleChange","_evt$target","name","value","target","defineProperty","handleSubmit","_this$state","endpoint","input","_this2","id","onSubmit","onChange","type","placeholder","concat","aria-label","SearchField_SearchField","onClick","App","components_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1a32cc51.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { SearchBar, GifCard } from './index';\nimport axios from 'axios';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gifs: [],\n      rating: ''\n    };\n  }\n  async componentDidMount() {\n    this.handleTrending()\n  }\n\n  handleTrending = async (rating) => {\n    const { data } = await axios.get('/api/trending');\n    this.setState({ gifs: data });\n  }\n  handleRandom = async () => {\n    const { data } = await axios.get('/api/random');\n    console.log(data)\n    this.setState({ gifs: [data] });\n  };\n\n  handleTranslate = async phrase => {\n    const toTranslate = { s: phrase };\n    const { data } = await axios.post('/api/translate', toTranslate);\n    this.setState({ gifs: [data] });\n  };\n\n  handleSearch = async searchParams => {\n    console.log('handle search fired!')\n    const searchQuery = { q: searchParams };\n    const { data } = await axios.post('/api/search', searchQuery);\n    console.log('data', data);\n    this.setState({ gifs: data });\n  };\n\n  handleHomeChange = async evt => {\n    evt.preventDefault();\n    console.log('Home change fired');\n  };\n  render() {\n    const { gifs } = this.state;\n    console.log(gifs)\n    return (\n      <div className=\"App\">\n        <h1>Welcome to the Gif Factory</h1>\n        <SearchBar\n          handleRandom={this.handleRandom}\n          handleSearch={this.handleSearch}\n          handleTranslate={this.handleTranslate}\n          handleTrending={this.handleTrending}\n          handleHomeChange={this.handleHomeChange}\n        />\n        {gifs.map(gif => (\n          <GifCard key={gif.url} props={gif} />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\n\nconst GifCard = (props) => {\n    const { images, url } = props.props;\n    return (\n        <div>\n            <img src={images.fixed_height_downsampled.url || images.fixed_height_downsampled.gif_url}  alt={props.props.title}/>\n            <p>Copy URL: {url}</p>\n        </div>\n    )\n}\n\nexport default GifCard","import React, { Component } from 'react';\n// import axios from 'axios';\n\nexport default class SearchField extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      endpoint: '',\n      input: '',\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.endpoint) this.setState({ endpoint: 'search' });\n  }\n  handleChange = async evt => {\n    evt.preventDefault();\n    const { name, value } = evt.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n    console.log('submit clicked');\n    const { endpoint, input } = this.state;\n    console.log('endpoint!', endpoint);\n    endpoint === 'search'\n      ? this.props.handleSearch(input)\n      : this.props.handleTranslate(input);\n    this.setState({\n      input: '',\n    });\n  };\n\n  render() {\n    return (\n      <form className=\"\" id=\"form-container\" onSubmit={this.handleSubmit}>\n        <label>Search or Translate?</label>\n        <select\n          onChange={evt => {\n            evt.target.name = 'endpoint';\n            this.handleChange(evt);\n          }}\n        >\n          <option value=\"search\">Search</option>\n          <option value=\"translate\">Translate</option>\n        </select>\n        <input\n          value={this.state.input}\n          name=\"input\"\n          onChange={this.handleChange}\n          className=\"\"\n          type=\"search\"\n          placeholder={`${this.state.endpoint}`}\n          aria-label=\"Search\"\n        />\n        <button className=\"\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport { SearchField } from './index';\n\nexport default function SearchBar(props) {\n  const {\n    handleHomeChange,\n    handleSearch,\n    handleTranslate,\n    handleTrending,\n    handleRandom,\n  } = props;\n  return (\n    <nav className=\"search-bar-container\">\n      <SearchField\n        handleHomeChange={handleHomeChange}\n        handleSearch={handleSearch}\n        handleTranslate={handleTranslate}\n      />\n      <div className=\"search-bar-button-container\">\n        <button\n          className=\"search-bar-button\"\n          type=\"button\"\n          onClick={handleTrending}\n        >\n          Trending\n        </button>\n        <button\n          className=\"search-bar-button\"\n          type=\"button\"\n          onClick={handleRandom}\n        >\n          Random\n        </button>\n      </div>\n    </nav>\n  );\n}\n","import React, { Component } from 'react';\nimport { Home } from './components';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Home />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}